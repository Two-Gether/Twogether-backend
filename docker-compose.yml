services:
  twogether-spring:
    image: jjinbok/capstone-hub:latest
    container_name: twogether-spring
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - mysql
    environment:
      SPRING_PROFILES_ACTIVE: prod
    restart: unless-stopped
    networks:
      - app-network

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/html:/var/www/html
    depends_on:
      - twogether-spring
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/html:/var/www/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
    restart: unless-stopped
    networks:
      - app-network
volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    driver: bridge
